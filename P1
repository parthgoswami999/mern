import mongoose from 'mongoose';
import express from 'express';
import cors from 'cors';
import Users from './Users.mjs';
const server = express();
server.use(express.json());
server.use(cors());
mongoose.connect("mongodb://localhost:27017/Assignment21");
server.use("/api", Users);
server.listen(3000, ()=>{
    console.log("Server connected at 3000");
})
//end sever
//

import mongoose from "mongoose";
const UserSchema = new mongoose.Schema({
    text: String,
  password: String,
  email: String,
  number: Number,
  tel: String,
  date: String,
  datetimeLocal: String,
  month: String,
  time: String,
  week: String,
  range: Number,
  checkbox: Boolean,
  radio: String,
})
export default mongoose.model("UserSchema", UserSchema);
//end model schema
//

import express from 'express';
import UserSchema from './UserSchema.mjs';

const Users = express.Router();

Users.post('/register', async (req, res) => {
    try {
      const newUser = new UserSchema(req.body);
      await newUser.save();
      res.status(201).json({ message: 'User registered successfully' });
    } catch (error) {
      res.status(400).json({ message: 'Error registering user', error });
    }
  });

  Users.get('/display', async (req, res) => {
    try {
      const getAll = await UserSchema.find();
      res.json(getAll);
    } catch (error) {
      res.status(500).json({ message: 'Error fetching data' });
    }
  });
export default Users;
//end api
//

import React, { useState } from 'react';
import axios from 'axios';

const RegistrationForm = () => {
  const [formData, setFormData] = useState({
    text: '',
    password: '',
    email: '',
    number: '',
    tel: '',
    date: '',
    datetimeLocal: '',
    month: '',
    time: '',
    week: '',
    range: '',
    checkbox: false,
    radio: '',
  });

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [name]: type === 'checkbox' ? checked : value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post('http://localhost:3000/api/register', formData);
      alert(response.data.message);
      handleReset();
    } catch (error) {
        console.log("client catch",error);
      alert('Error registering user');
    }
  };

  const handleReset = () => {
    setFormData({
      text: '',
      password: '',
      email: '',
      number: '',
      tel: '',
      date: '',
      datetimeLocal: '',
      month: '',
      time: '',
      week: '',
      range: '',
      checkbox: false,
      radio: '',
    });
  };

  return (
    <form className="registration-form" onSubmit={handleSubmit}>
      <h2>Registration Form</h2>
      <div className="form-group">
        <label>Text:</label>
        <input type="text" name="text" value={formData.text} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Password:</label>
        <input type="password" name="password" value={formData.password} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Email:</label>
        <input type="email" name="email" value={formData.email} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Number:</label>
        <input type="number" name="number" value={formData.number} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Telephone:</label>
        <input type="tel" name="tel" value={formData.tel} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Date:</label>
        <input type="date" name="date" value={formData.date} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>DateTime Local:</label>
        <input type="datetime-local" name="datetimeLocal" value={formData.datetimeLocal} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Month:</label>
        <input type="month" name="month" value={formData.month} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Time:</label>
        <input type="time" name="time" value={formData.time} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Week:</label>
        <input type="week" name="week" value={formData.week} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Range:</label>
        <input type="range" name="range" value={formData.range} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Checkbox:</label>
        <input type="checkbox" name="checkbox" checked={formData.checkbox} onChange={handleChange} />
      </div>
      <div className="form-group">
        <label>Radio:</label>
        <input type="radio" name="radio" value="option1" checked={formData.radio === 'option1'} onChange={handleChange} /> Option 1
        <input type="radio" name="radio" value="option2" checked={formData.radio === 'option2'} onChange={handleChange} /> Option 2
      </div>

      <div className="form-actions">
        <input type="reset" value="Reset" onClick={handleReset} />
        <input type="submit" value="Register" />
      </div>
    </form>
  );
};

export default RegistrationForm;
//end fronten add data from
//

// src/components/DisplayData.js
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const DisplayData = () => {
  const [registrations, setRegistrations] = useState([]);
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get('http://localhost:3000/api/display');
        setRegistrations(response.data);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []);

  return (
    <div>
      <h2>Registered Users</h2>
      <table border={1}>
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Telephone</th>
            <th>Registration Date</th>
          </tr>
        </thead>
        <tbody>
          {registrations.map((registration) => (
            <tr key={registration._id}>
              <td>{registration.text}</td>
              <td>{registration.email}</td>
              <td>{registration.tel}</td>
              <td>{new Date(registration.date).toLocaleDateString()}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default DisplayData;
//end display data
//
