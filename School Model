import mongoose from "mongoose";

const studentSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  rollNumber: { type: String, required: true, unique: true },
  class: { type: mongoose.Schema.Types.ObjectId, ref: "Class" },
  age: { type: Number, required: true },
  gender: { type: String, enum: ["Male", "Female", "Other"], required: true },
  attendance: [{ type: mongoose.Schema.Types.ObjectId, ref: "Attendance" }],
  results: [{ type: mongoose.Schema.Types.ObjectId, ref: "Result" }],
});

const Student = mongoose.model("Student", studentSchema);
export default Student;

**************
const teacherSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  subject: { type: String, required: true },
  classes: [{ type: mongoose.Schema.Types.ObjectId, ref: "Class" }],
});

const Teacher = mongoose.model("Teacher", teacherSchema);
export default Teacher;

***************
const classSchema = new mongoose.Schema({
  name: { type: String, required: true },
  section: { type: String, required: true },
  students: [{ type: mongoose.Schema.Types.ObjectId, ref: "Student" }],
  teacher: { type: mongoose.Schema.Types.ObjectId, ref: "Teacher" },
});

const Class = mongoose.model("Class", classSchema);
export default Class;


*****************
const attendanceSchema = new mongoose.Schema({
  student: { type: mongoose.Schema.Types.ObjectId, ref: "Student", required: true },
  date: { type: Date, required: true, default: Date.now },
  status: { type: String, enum: ["Present", "Absent"], required: true },
});

const Attendance = mongoose.model("Attendance", attendanceSchema);
export default Attendance;


*******************
const resultSchema = new mongoose.Schema({
  student: { type: mongoose.Schema.Types.ObjectId, ref: "Student", required: true },
  subject: { type: String, required: true },
  marksObtained: { type: Number, required: true },
  totalMarks: { type: Number, required: true },
  grade: { type: String },
});

const Result = mongoose.model("Result", resultSchema);
export default Result;


******************
import mongoose from "mongoose";

const courseSchema = new mongoose.Schema({
  title: { type: String, required: true }, // Course title (e.g., Math, Science)
  code: { type: String, required: true, unique: true }, // Unique course code (e.g., MATH101)
  description: { type: String }, // Brief description of the course
  teacher: { type: mongoose.Schema.Types.ObjectId, ref: "Teacher", required: true }, // Assigned teacher
  students: [{ type: mongoose.Schema.Types.ObjectId, ref: "Student" }], // Students enrolled in this course
  credits: { type: Number, required: true }, // Credit hours (e.g., 3, 4)
  schedule: {
    day: { type: String, enum: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] },
    time: { type: String }, // Time slot (e.g., "10:00 AM - 11:30 AM")
  },
  semester: { type: String, required: true }, // Semester info (e.g., "Fall 2024")
  createdAt: { type: Date, default: Date.now }, // Timestamp for record creation
});

const Course = mongoose.model("Course", courseSchema);
export default Course;
